『三年前，我意識到自己選錯大學主修，我根本不喜歡念商。於是我花了三年時間去轉換跑道，上個月已經收到臉書總部的錄取通知，即將作為軟體工程實習生前往矽谷！』

我三年前來到紐約實習，第一次拿了學生工作簽證來到世界金融中心時的心情是雀躍的，但是作為會計師每天審查帳本的生活終究把自己不願意承認的失敗甩在了我的臉上。不只是自己做得不好（曾有客戶直接在電話裡跟我說他聽不懂我說的英文，另外主管雖然幫忙寫了一封推薦信以備我未來所需，但也當面表明他不願在推薦信上寫得太正向），而且「我真的不喜歡會計」的想法像是全面啟動裡被植入的想法一樣一點一點成長。最後我每天在紐約搭公車上班的路上，開始抱著一本 Java 的書，決定從零開始學習一門新的、真正令我感到興奮的知識——軟體開發。

直到三年後的今天，我是真的很感謝自己熬過了每一個對自己失望的日子，撐到豐收的 2018 年，錄取了 Cornell Tech 的研究所、也收到了矽谷臉書總部的實習錄取。

最近重新開始寫文，常常被問自己是怎麼做的？怎麼從商學院走到這兒來。

趁著 2018 年尾，我找了間咖啡廳坐坐、回顧與整理整理自己這三年來做的一些努力，把三年來自己的旅程拆解成幾個階段：「尋找動力」、「累積實力」、「從做中學」、「實習」，最後討論自學至此後的「下一步」，寫成了這篇文分享給一些還在尋找未來的學弟學妹們參考。也許資工或者程式開發這條路不一定適合你，但它絕對是一條你（努力的話）也做得到的選項。


【1. 尋找動力】
『轉職的動力要從哪來？實習是個照妖鏡』
就像上面提到的，我自己也是透過大二實習的機會才正視自己過去兩年所學跟自己興趣完全搭不上邊的問題。我還滿鼓勵不知道自己喜歡什麼、甚至連自己不喜歡什麼都不知道的人去做做看不同的實習，花那幾週的機會試試水溫、看自己願不願做下去。

我自己在大二這次會計實習之前，其實就多少意識到自己並不喜歡會計這門主修，所以在大一大二的兩年我做了超過五種的實習工作，我曾經作為英文交流官（我其實也不知道要怎麼說明這職位XD 但我曾在匈牙利教當地的高中學生英文與做些文化交流）、曾在新創孵化器裡做過活動策劃實習、也在新創公司裡做過行銷實習生、高中時也曾作為小說家跟某出版社簽過合約（我其實還是很愛寫小說，未來也有計劃再繼續寫），最後才終於在大二時收到一家紐約會計事務所的錄取，真正地嘗試看看自己主修的會計工作。

結果就像前面提到的悲劇XD

當時我女友正好也跟我一起在紐約實習，她當時就是做軟體開發工程師了，而我自己高中時也曾短暫的接觸過程式語言，所以當時很自然的就想說來試試看——結果一試成主顧，發現自己深深愛上打了一段程式碼之後，就能變出某種介面讓我的點子真正的活過來、跟使用者互動的能力。從樂高的年紀之後，我第一次又感覺到自己的想像力有了活過來的機會。


【2. 累積實力】
『有了動力後要面對的現實』
不想要一輩子做自己根本不喜歡的工作成為了動力。

資工、軟體開發那像是孩童時期建築樂高、模型或者自己寫小說時的創造能力也是動力，但是 reality is a bitc (beep!)，我當時在資工的領域還幾乎零經驗，頂多只能說自己曾修過最基礎的程式語言課程、了解 for loop 是個怎樣的概念，或者要怎麼用 Java or C++ 寫出基礎的計算機（而且還沒有前端模組，只要用 terminal 去操作）。

於是，在了解程式語言怎麼運作的前提下（這是真的很重要），我在接下來大三上的學期裡買了一個接著一個的線上課程（趁著Udemy特價每一門課都只要 $10 美金時，少吃兩頓摩斯漢堡就有了），雖然我沒辦法保證這些課程教的東西在今天的就業市場上還有價值，但以下是我上過的幾門 udemy 課程：

＊The Complete Web Developer Course — Build 14 Websites
＊Projects in AngularJS — Learn by building 10 Projects
＊The Complete Node.js Developer Course (1st Edition)
＊WordPress Theme Development with Bootstrap
＊Learn MeteorJS By Building 10 Real World Projects

那個學期除了大學裡 15 學分的課程之外，我每天至少花兩小時在這些線上課程上，甚至連Udemy總部都注意到我的進度，後來主動聯繫我跟我約了次採訪XD

除了 Udemy 之外，或甚至說在 Udemy 之後（我後來感覺 Udemy 出課的速度還是比 Youtube 或者一些教師們自己經營的平台還慢一些），我後來又找了一些更符合我自己需求的課程。

當時因為自己想做跟網頁相關的 projects，所以上了 Levelup Tutorials 免費的 Meteor for Everyone，對我幫助極大。Meteor 本身是個全端的 JavaScript 架構，從後端資料庫 MongoDB 到前端串接 React/Blaze/Angular 的邏輯全都包了，所以學完這門課突然就有了真正把 projects 做出來的能力了，個人至今都還滿推薦 Meteor 這個架構。

『判斷學習的需求/方向』
就像前面說的，我覺得寫程式最妙的地方就是可以讓你的點子活過來，所以我一向很建議想要自學資工的人想想自己的需求、自己的點子是什麼？我自己想做一些網頁相關的平台，所以就找了一些跟網頁開發相關的課程，但如果妳的點子比較適合被做成手機app，那也許你應該去找找那方面的資源。

資工真的很廣泛，有人做 Web、有人做 Mobile app、也有做機器學習 Machine Learning，每個領域要專精都要花很多時間，我覺得最好還是從點子出發，看你想做什麼，再根據它去計劃自己的學習。

如果讀到這邊，你覺得你有點子想做，但不知道要找怎樣的資源去做出你想要的東西，那也歡迎你留言或者私訊我，我很樂意跟人討論 idea/project 相關的事情 :)

『如何有效利用線上課程自學』
推薦一些線上課程後，我想稍微再講講自己怎麼做線上學習的。

選課就像前面說的，先想想自己想要 build 的點子是什麼，再去找相關的資源來學習。所以同樣道理的，我都會建議做線上學習時不要只是聽課、不要只是看教師把程式碼寫完，因為有時候看過去自己以為自己已經會了，但真正丟給自己另一個 context、要做自己的點子的時候又不知道要怎麼從頭做起了。

所以上完一門課、或者邊上的時候，我都會強迫自己同步也做一個類似的小 project。不用很複雜，就一個功能的小專案就好了。如果你學的是HTML/CSS/JavaScript 這些基礎網頁開發，那我會建議你做個自己的個人網站試試看 :)

或者像是我學 Meteor 的時候因為正好是過年期間，所以我記得我就做了一個許願、上傳新年新希望的網站。雖然當時的那個網站長得很醜、也沒有人用，但是至少自己把使用 Meteor 的第一行指令到把網頁跟資料庫本身部署到雲端的步驟都走過一次，下次要做其他 projects 時就比較能得心應手。

這些好習慣直至今日，我也還在不斷的自學與應用。這個寒假，我自己正在上一門 Web Bos 的 Advanced React + GraphQL 課程（真的極推，但需要一些 React 的基礎），希望跟這門課程相關的小 project 在一兩個月以內也能跟大家正式見面！


【3. 從做中學】
『整整一個學期的自學之後』
經過整整一個學期、半年的自學期之後，我大概了解自己已經有基礎的網頁開發能力，意識到繼續透過類似的線上課程自學已經沒有太大意義的時候，就差不多是可以來找外部 projects、或者建構自己的點子的時候了。

但是，

就算我說自己有能力做網站，有人會相信我嗎？老王賣瓜，賣得出去嗎？

這時候就是你透過學生身份，盡力去犯錯的時候了。我爸從小就教我要多趁自己還是學生的時候去犯錯、從錯誤中學習，還是學生的時候犯錯頂多被罵一罵就算了，等到進了業界犯錯就有實質上的懲罰了。我就很慶幸自己聽了進去，因為最一開始真的沒有公司會信任我、把 production level 的 projects 丟給我做，於是我開始雙主修資工，而且——到處「創立」自己的經驗。

我首先在大學裡創立了一個自學組織，湊了七個人、每個禮拜花兩天的晚上大家一起自學，這時候我也會去做簡單的 Meteor 的教學，每週花個半小時到一小時跟大家分享 Meteor 這個架構的點點滴滴，一陣子後甚至跟大家一起接了個案子開發，替香港某音樂公司開發了他們的網頁。

